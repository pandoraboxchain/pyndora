@startuml

boundary webapi
control main
entity ipfs

== Initialization ==

[-> main: start
activate main
main -> main: read_config()
deactivate main

create webapi
main -->> webapi: thread

main -> ipfs: init
activate ipfs
ipfs -->> ipfs: thread
alt failure
    ipfs -\\ main: shutdown
    destroy ipfs
    destroy main

else success
    ipfs --\\ main: connected
    deactivate ipfs

    create entity eth
    main -->> eth: thread
    loop
        eth -> eth: connect
    end
    eth -> eth: read_contracts

    alt failure
        eth --\\ main: shutdown
        destroy eth
        main -> ipfs: shutdown
        destroy ipfs
        destroy main

    else success
        eth --\\ main: connected

== Main workflows ==

        eth ->>]: ask for state
        loop
            eth <<--]: state
            group process_state
                create control computing
                eth -->> computing: compute
                activate computing
                opt for DataValidation & Computing
                    computing -> ipfs: load_data
                    activate ipfs
                    ipfs --> computing: loaded
                    deactivate ipfs
                    deactivate computing
                    create control model
                    computing -->> model: thread
                    model -> model: run
                    activate model
                    model --\\ computing: completed
                    activate computing
                    deactivate model
                    destroy model
                    computing -> ipfs: upload
                    activate ipfs
                    ipfs --> computing: uploaded
                    deactivate ipfs
                end
                computing --\\ eth: completed
                deactivate computing
                destroy computing
            end
            eth ->]: change_state
            eth -> eth: listen_events
            ...
        end
    end
end

== API requests ==

[-> webapi: request
activate webapi
webapi -> main: read_state
activate main
main -> eth: read_state
activate eth
eth -> computing: read_state
activate computing
computing -->> eth: data
deactivate computing
eth -->> main: data
deactivate eth
main -->> webapi: results
deactivate main
[<<-- webapi: data
deactivate webapi

@enduml